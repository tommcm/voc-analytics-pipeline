AWSTemplateFormatVersion: "2010-09-09"
Description: "An example job status poller template."
Parameters: 
  stateMachineArnParameter: 
    Type: String
    Default: arn:aws:states:us-east-1:708252083442:stateMachine:TranscribeJobStatusPollerSt-1oHfEwYAgrz7
    Description: Enter the ARN of the created Amazon Transcribe Job Submit Job State Machine
  stateMachineExecutionNamePrefixParameter: 
      Type: String
      Default: AmazonConnect
      Description: Prefix to be used when creating a SF execution
  waitTimeParameter: 
      Type: String
      Default: 5
      Description: Enter the ARN of the created Amazon Transcribe Job Submit Job State Machine
  AmazonConnectInstanceAliasParameter:
      Type: String
      Default: sydney-summit
      Description: Enter the name of Amazon Connect Instance Alias (created manually as prereq)

Resources:
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        -
          PolicyName: "AdminAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"

  AmazonConnectCallRecordingsS3events:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Sub '${AWS::StackName}-CallRecordingtoSF'
      Description: Task to attempt to submit an execution to state machine
      # Handler: "lambda_function.lambda_handler"
      Handler: "index.lambda_handler"
      Role: !GetAtt [ LambdaExecutionRole, Arn ]
      Code:
        S3Bucket: !Sub tommcm-demo-${AWS::Region}
        S3Key: voc-analytics/AmazonConnectCallTranscription_1-0-0.zip
      Environment:
        Variables:
          stateMachineArn: !Ref stateMachineArnParameter
          stateMachineExecutionNamePrefix: !Ref stateMachineExecutionNamePrefixParameter
          waittime: !Ref waitTimeParameter
      Runtime: "python2.7"
      Timeout: "25"

###### TODO
  # LambdaInvokePermission:
  #   Type: 'AWS::Lambda::Permission'
  #   Properties:
  #     FunctionName: !GetAtt 
  #       - AmazonConnectCallRecordingsS3events
  #       - Arn
  #     Action: 'lambda:InvokeFunction'
  #     Principal: s3.amazonaws.com
  #     SourceArn: !GetAtt 
  #       - AmazonConnectCallBucket
  #       - Arn

  AmazonConnectCallBucket:
      Type: "AWS::S3::Bucket"
      Properties: 
        BucketName: !Sub "connect-${AWS::StackName}-${AWS::AccountId}-${AWS::Region}"
        ####### TODO
        # NotificationConfiguration:
        #   LambdaConfigurations:
        #     -
        #       Function: !GetAtt AmazonConnectCallRecordingsS3events.Arn
        #       Event: "s3:ObjectCreated:*"
        #       Filter:
        #         S3Key:
        #           Rules:
        #             -
        #               Name: suffix
        #               Value: .wav
        #             - 
        #               Name: prefix
        #               Value: connect/sydney-summit/CallRecordings  

  S3TranscribeBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref AmazonConnectCallBucket
      PolicyDocument:
        Statement:
          -
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: "AmazonConnectCallBucket"
                  - "/*"
            Principal:
              Service: 
                - "transcribe.amazonaws.com"

